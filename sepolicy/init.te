# allow container init (cmld child) to mount its filesystems 
allow init self:capability2 sys_mount;
allow init system_file:dir mounton;
allow init trustme-com:dir mounton;

# allow container init (cmld child) to drop its capabilities
allow init self:capability setpcap;

# setcon to init domain.
allow init self:process setcurrent;

# cgroup filesystem initialization prior to setting the cgroup root directory label.
allow init unlabeled:dir search;

#allow container init to create loop devs
allow init dev_type:blk_file create;

#allow conatiner init to create sockets in /dev/sockets
allow init { device socket_device }:dir relabelto;
allow init socket_device:sock_file create_file_perms;

#allow /dev/__properties__  in container
allow init device:{ dir file } relabelfrom;
allow init properties_device:file relabelto;

#allow /sys
allow init sysfs:{ dir file lnk_file } relabelfrom;
allow init sysfs_type:{ dir file lnk_file } relabelto;
allow init sysfs_type:{ dir file lnk_file } rw_file_perms;

# cmld sockets
type_transition init device:sock_file cmld_socket;

# Allow container init to spawn dnsmasq in it's own domain
domain_auto_trans(init, dnsmasq_exec, dnsmasq)

# Allow container init to spawn hardware proxies in itheir coresponding domain
domain_auto_trans(init, gpsd_exec, gpsd)
domain_auto_trans(init, sensor_server_exec, system_server)
domain_auto_trans(init, svc_exec, shell)


### allow cmld's child in new container ns to setup stuff

#allow contantainer init to bring up loop back
allow init self:netlink_route_socket { create read getattr write setattr lock append bind connect getopt setopt shutdown nlmsg_read nlmsg_write};

#allow container init to run ip command
allow init rootfs:file execute_no_trans;

#allow init to run its binary in its own context
allow init init_exec:file execute_no_trans;

#allow container init to communicate with cmld
allow init socket_device:sock_file rw_file_perms;

#allow container init to write to loop devs
allow init loop_device:blk_file { read write };
allow init block_device:blk_file { unlink read write };

#allow container init to mount persist
allow init persist_file:dir mounton;

#allow change root
allow init self:capability sys_chroot;

allow init init_tmpfs:file rw_file_perms;

# Allow init relabel itself.
allow init rootfs:file relabelfrom;

# Allow writing to /dev/__kmsg__ which was created prior to
# loading policy
allow init device:chr_file { create unlink write };
allow init kmsg_device:chr_file write;
